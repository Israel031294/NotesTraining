<?xml version="1.0" encoding="UTF-8"?>
<!--
 Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.
-->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">
		
	<context:annotation-config/> 

	<alias alias="simpleSuggestionFacade" name="defaultSimpleSuggestionFacade"/>
	<bean id="defaultSimpleSuggestionFacade" class="com.ardctraining.facades.suggestion.impl.DefaultSimpleSuggestionFacade" >
		<property name="simpleSuggestionService" ref="simpleSuggestionService"/>
		<property name="userService" ref="userService"/>
		<property name="categoryService" ref="categoryService"/>
		<property name="productService" ref="productService"/>
		<property name="productConverter" ref="carouselProductConverter"/>
		<property name="cartService" ref="cartService"/>
	</bean>
	
	<bean id="carouselProductConverter" parent="defaultProductConverter">
		<property name="populators">
			<list merge="true">
				<ref bean="productPricePopulator"/>
			</list>
		</property>
	</bean>

	<alias name="acceleratorVariantOptionDataConverter" alias="variantOptionDataConverter"/> 
	<bean id="acceleratorVariantOptionDataConverter" parent="abstractPopulatingConverter">
		<lookup-method name="createTarget" bean="variantOptionData"/>
		<property name="populators">
			<list>
				<ref bean="acceleratorVariantOptionDataPopulator"/>
			</list>
		</property>
	</bean>

	<alias name="defaultAcceleratorVariantOptionDataPopulator" alias="acceleratorVariantOptionDataPopulator"/>
	<bean id="defaultAcceleratorVariantOptionDataPopulator"  class="com.ardctraining.facades.populators.AcceleratorVariantOptionDataPopulator"
	      parent="variantOptionDataPopulator" >
		<property name="mediaService" ref="mediaService"/>
		<property name="mediaContainerService" ref="mediaContainerService"/>
		<property name="typeService" ref="typeService"/>
		<property name="imageFormatMapping" ref="imageFormatMapping"/>
		<property name="variantAttributeMapping">
			<map>
				<entry key="ApparelStyleVariantProduct.style" value="styleSwatch"/>
			</map>
		</property>
	</bean>


	<alias name="acceleratorGenderConverter" alias="genderConverter"/> 
	<bean id="acceleratorGenderConverter" parent="abstractPopulatingConverter">
		<property name="targetClass" value="com.ardctraining.facades.product.data.GenderData"/>
			<property name="populators">
				<list>
					<ref bean="genderDataPopulator"/>
				</list>
			</property>
	</bean>

	<alias name="defaultGenderDataPopulator" alias="genderDataPopulator"/>
	<bean id="defaultGenderDataPopulator" class="com.ardctraining.facades.populators.GenderDataPopulator" >
		<property name="typeService" ref="typeService"/>
	</bean>

	<bean id="apparelProductPopulator" class="com.ardctraining.facades.populators.ApparelProductPopulator" >
		<property name="genderConverter" ref="genderConverter"/>
	</bean>

	<!-- Add the apparelProductPopulator to the productConverter -->
	<bean parent="modifyPopulatorList">
		<property name="list" ref="productConverter"/>
		<property name="add" ref="apparelProductPopulator"/>
	</bean>

	<!-- accelerator Image Format Mappings -->
	<alias name="acceleratorImageFormatMapping" alias="imageFormatMapping"/>
	<bean id="acceleratorImageFormatMapping" parent="defaultImageFormatMapping">
		<property name="mapping">
			<map>
				<entry key="superZoom" value="1200Wx1200H"/>
				<entry key="zoom" value="515Wx515H"/>
				<entry key="store" value="365Wx246H"/>
				<entry key="product" value="300Wx300H"/>
				<entry key="thumbnail" value="96Wx96H"/>
				<entry key="cartIcon" value="65Wx65H"/>
				<entry key="styleSwatch" value="30Wx30H"/>
			</map>
		</property>
	</bean>

	<alias name="acceleratorProductPrimaryImagePopulator" alias="productPrimaryImagePopulator" />
	<bean id="acceleratorProductPrimaryImagePopulator" parent="defaultProductPrimaryImagePopulator">
		<property name="imageFormats">
			<list>
				<value>zoom</value>
				<value>product</value>
				<value>thumbnail</value>
				<value>cartIcon</value>
			</list>
		</property>
	</bean>

	<alias name="acceleratorProductGalleryImagesPopulator" alias="productGalleryImagesPopulator" />
	<bean id="acceleratorProductGalleryImagesPopulator" parent="defaultProductGalleryImagesPopulator">
		<property name="imageFormats">
			<list>
				<value>superZoom</value>
				<value>zoom</value>
				<value>product</value>
				<value>thumbnail</value>
			</list>
		</property>
	</bean>

	<bean id="customerEmailContext" class="com.ardctraining.facades.process.email.context.CustomerEmailContext" parent="abstractEmailContext" scope="prototype" >
		<property name="customerConverter" ref="customerConverter"/>
	</bean>

	<bean id="forgottenPasswordEmailContext" class="com.ardctraining.facades.process.email.context.ForgottenPasswordEmailContext" parent="customerEmailContext" scope="prototype" >
		<property name="customerConverter" ref="customerConverter"/>
	</bean>

	<bean id="orderNotificationEmailContext" class="com.ardctraining.facades.process.email.context.OrderNotificationEmailContext" parent="abstractEmailContext" scope="prototype" >
		<property name="orderConverter" ref="orderConverter"/>
	</bean>

	<bean id="quoteNotificationEmailContext" class="com.ardctraining.facades.process.email.context.QuoteNotificationEmailContext" parent="abstractEmailContext" scope="prototype" >
		<property name="quoteService" ref="quoteService"/>
		<property name="quoteConverter" ref="quoteConverter"/>
	</bean>
	
	<bean id="deliverySentEmailContext" class="com.ardctraining.facades.process.email.context.DeliverySentEmailContext" parent="abstractEmailContext" scope="prototype" >
		<property name="consignmentConverter" ref="consignmentConverter"/>
	</bean>
	
	<bean id="readyForPickupEmailContext" class="com.ardctraining.facades.process.email.context.ReadyForPickupEmailContext" parent="abstractEmailContext" scope="prototype" >
		<property name="consignmentConverter" ref="consignmentConverter"/>
	</bean>
	
	<bean id="orderCancelledEmailContext" class="com.ardctraining.facades.process.email.context.OrderCancelledEmailContext" parent="abstractEmailContext" scope="prototype" >
		<property name="orderConverter" ref="orderConverter"/>
	</bean>
	
	<bean id="orderRefundEmailContext" class="com.ardctraining.facades.process.email.context.OrderRefundEmailContext" parent="abstractEmailContext" scope="prototype" >
		<property name="orderConverter" ref="orderConverter"/>
	</bean>
	<bean id="consignmentCollectionReminderEmailContext" class="com.ardctraining.facades.process.email.context.ConsignmentCollectionReminderEmailContext" parent="abstractEmailContext" scope="prototype">
        <property name="consignmentConverter" ref="consignmentConverter"/>
        <property name="formatFactory" ref="formatFactory"/>
        <property name="customerServiceUncollectedConsignmentStrategy" ref="customerServiceUncollectedConsignmentStrategy" />
        <property name="orderConverter" ref="orderConverter"/>
    </bean>

	<bean id="orderPartiallyModifiedEmailContext" class="com.ardctraining.facades.process.email.context.OrderPartiallyModifiedEmailContext" parent="abstractEmailContext" scope="prototype" >
		<property name="orderConverter" ref="orderConverter"/>
		<property name="orderEntryConverter" ref="orderEntryConverter"/>
		<property name="priceDataFactory" ref="priceDataFactory"/>		
	</bean>

	<bean id="orderPartiallyCanceledEmailContext" class="com.ardctraining.facades.process.email.context.OrderPartiallyCanceledEmailContext" parent="orderPartiallyModifiedEmailContext" scope="prototype" >
	</bean>

	<bean id="orderPartiallyRefundedEmailContext" class="com.ardctraining.facades.process.email.context.OrderPartiallyRefundedEmailContext" parent="orderPartiallyModifiedEmailContext" scope="prototype" >
	</bean>

	<bean id="notPickedUpConsignmentCanceledEmailContext" class="com.ardctraining.facades.process.email.context.NotPickedUpConsignmentCanceledEmailContext" parent="abstractEmailContext" scope="prototype" >
		<property name="consignmentConverter" ref="consignmentConverter"/>
		<property name="priceDataFactory" ref="priceDataFactory"/>
	</bean>

	<alias name="yacceleratorSearchPagePointOfServiceDistancePopulator" alias="searchPagePointOfServiceDistancePopulator" />
	<bean id="yacceleratorSearchPagePointOfServiceDistancePopulator" class="com.ardctraining.facades.storefinder.populators.SearchPagePointOfServiceDistancePopulator" >
		<property name="pointOfServiceDistanceConverter" ref="pointOfServiceDistanceConverter"/>
	</bean>

	<bean id="genderData" class="com.ardctraining.facades.product.data.GenderData" scope="prototype"/>
	<!--BEGIN-->
	<!--EL NAME ES EL ID DEL BEAN, el alimas em min al inicio sin el default-->
	<alias name="defaultJobRolePopulator" alias="jobRolePopulator" />
	<bean id="defaultJobRolePopulator" class="com.ardctraining.facades.populators.JobRolePopulator" />
<!--EL CONVERTER NO SE DEFINE POR CLASE, solo se define un bean  que hereda la funcionalidad del abstract
no se especifica un class sino un parent, para todos los converter es igual solo cambia el id, la
property del target, el value es la clase data que vamos a poblar como target
y la otra property importante son los populators que se inyecta por el alias del populator-->
	<alias name="defaultJobRoleConverter" alias="jobRoleConverter" />
	<bean id="defaultJobRoleConverter" parent="abstractPopulatingConverter">
		<property name="targetClass" value="com.ardctraining.facades.customer.data.JobRoleData" />
		<property name="populators">
			<list>
				<ref bean="jobRolePopulator" />
			</list>
		</property>
	</bean>
<!--para definir el bean del facade al extender de algo del estandar debemos saber
ya tiene un bean definicion, hay que entrar al customerFacade, buscralo con ctrl+f->file mask
para sobreescribir hay que usar el mismo alias en el bean pero apuntando a la clase
primero se define el parent del bean usando el id del bean

SOBREESCRIBIR BEANS DEL ESTANDAR 2;02
Definimos el bean con name , class y
el parent es el id del bean del estandar que es defaultcustomerfacade.
en el alias , el name es el id del bean y el alias es el alias del bean del estandar

como ya tenbemos el acceso a datos, hay que ver en que controller y en euq vista vamos a modificar el formulario
buscar el ACTION, ya que este resuelve el requestmapping en este caso /login/register
USAR EL BUSCADOR, buscar clases que terminan con controller
los fomr generalmente van por post,
necesitamos que el form soporte tanto company como jobRole
registerform esta sobre un form que no podemos modificar (readonly), hay que hacer un form que extienda del
registerform y agregar nuestros atributos

VAMOS A LA EXTENSION DEL STOREFRONT, AHI TENEMOS JSP, CONTROLLERS, VISTAS, VALIDATORS, FORMS
CREAR UN PAQUETE DE FORMS
-->
	<alias name="defaultArdctrainingCustomerFacade" alias="customerFacade" />
	<bean id="defaultArdctrainingCustomerFacade"
		  class="com.ardctraining.facades.customer.impl.DefaultArdctrainingCustomerFacade"
		  parent="defaultCustomerFacade">
		<property name="ardctrainingJobRoleService" ref="ardctrainingJobRoleService" />
		<property name="jobRoleConverter" ref="jobRoleConverter" />
	</bean>
</beans>
